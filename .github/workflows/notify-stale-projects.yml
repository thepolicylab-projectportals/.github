name: Get email body for stale projects

on:
  workflow_call:
    inputs:
      to:
        type: string
        default: "heather_yu@brown.edu"

permissions:
  contents: read
  packages: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/
          scope: '@thepolicylab-projectportals'
          cache: 'yarn'

      - run: yarn config set 'npmRegistries["//npm.pkg.github.com"].npmAuthToken' "${{ secrets.GITHUB_TOKEN }}"

      - id: get-cache
        uses: actions/cache/restore@v3
        with:
          path: .cache
          key: ${{ runner.os }}-primes

      - run: yarn install --immutable

      - name: Cache yarn install
        id: save-cache
        uses: actions/cache/save@v3
        with:
          path: .cache
          key: ${{ steps.get-cache.outputs.cache-primary-key }}

      - name: Start up app
        run: yarn develop & npx wait-on http://localhost:8000
        
      - run: |
            curl 'http://localhost:8000/___graphql' \
            -X POST \
            -H 'content-type: application/json' \
            --data '{"query": "query { allProject { nodes { id, title, slug, status, opportunityCloses, endDate, startDate, lastModified, mainContact { name, email }  } } }"}' \
            --verbose > query.txt
        id: get_projects
        
      - run: cat query.txt

      - name: Checkout .Github
        id: github
        uses: actions/checkout@v3
        with:
          repository: thepolicylab-projectportals/.github
          ref: feat-notification-stale-projects
          path: github-email
          token: ${{ secrets.TEST_GITHUB_PAT }}

      - run: |
            cd github-email
            npm install

      - name: Email Body
        id: get_body
        run: node ./github-email/.github/scripts/get-stale-projects.js query.txt

      - name: Create file for body of email
        run: ${ body } > body.txt

      - name: Check Body of Email
        run: cat body.txt

      - name: Send notification email
        uses: dawidd6/action-send-mail@v2
        with:
          # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
          # user credentials
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          # email subject
          subject: Notification for ${{ github.repository }}
          # email body as text
          body: body.txt
          # comma-separated string, send email to
          to: ${{ inputs.to }}
          # from email name
          from: Your Friendly Neighborhood Spider-man
